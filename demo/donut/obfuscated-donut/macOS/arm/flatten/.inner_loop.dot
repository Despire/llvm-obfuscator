digraph "CFG for 'inner_loop' function" {
	label="CFG for 'inner_loop' function";

	Node0x6000035e3740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{entry:\l  %.reg2mem66 = alloca i32, align 4\l  %.reg2mem64 = alloca double, align 8\l  %.reg2mem61 = alloca float*, align 8\l  %.reg2mem58 = alloca i64, align 8\l  %.reg2mem55 = alloca i32, align 4\l  %.reg2mem52 = alloca i32, align 4\l  %.reg2mem48 = alloca i32, align 4\l  %.reg2mem43 = alloca float, align 4\l  %.reg2mem39 = alloca double, align 8\l  %.reg2mem36 = alloca float, align 4\l  %.reg2mem33 = alloca float, align 4\l  %.reg2mem29 = alloca float, align 4\l  %.reg2mem27 = alloca i1, align 1\l  %.reg2mem25 = alloca i1, align 1\l  %.reg2mem21 = alloca i8**, align 8\l  %.reg2mem16 = alloca i8**, align 8\l  %.reg2mem13 = alloca i8**, align 8\l  %.reg2mem10 = alloca i8**, align 8\l  %.reg2mem6 = alloca i8**, align 8\l  %.reg2mem3 = alloca i8**, align 8\l  %.reg2mem = alloca i8**, align 8\l  %JumpTable = alloca i8*, i32 8, align 8\l  %5 = getelementptr i8*, i8** %JumpTable, i32 0\l  store i8* blockaddress(@inner_loop, %BogusBasciBlock), i8** %5, align 8\l  %6 = getelementptr i8*, i8** %JumpTable, i32 1\l  store i8** %6, i8*** %.reg2mem, align 8\l  %.reload2 = load i8**, i8*** %.reg2mem, align 8\l  store i8* blockaddress(@inner_loop, %EntryBasicBlockSplit), i8** %.reload2,\l... align 8\l  %7 = getelementptr i8*, i8** %JumpTable, i32 2\l  store i8** %7, i8*** %.reg2mem3, align 8\l  %.reload5 = load i8**, i8*** %.reg2mem3, align 8\l  store i8* blockaddress(@inner_loop, %\"2\"), i8** %.reload5, align 8\l  %8 = getelementptr i8*, i8** %JumpTable, i32 3\l  store i8** %8, i8*** %.reg2mem6, align 8\l  %.reload9 = load i8**, i8*** %.reg2mem6, align 8\l  store i8* blockaddress(@inner_loop, %\"3\"), i8** %.reload9, align 8\l  %9 = getelementptr i8*, i8** %JumpTable, i32 4\l  store i8** %9, i8*** %.reg2mem10, align 8\l  %.reload12 = load i8**, i8*** %.reg2mem10, align 8\l  store i8* blockaddress(@inner_loop, %\"4\"), i8** %.reload12, align 8\l  %10 = getelementptr i8*, i8** %JumpTable, i32 5\l  store i8** %10, i8*** %.reg2mem13, align 8\l  %.reload15 = load i8**, i8*** %.reg2mem13, align 8\l  store i8* blockaddress(@inner_loop, %\"5\"), i8** %.reload15, align 8\l  %11 = getelementptr i8*, i8** %JumpTable, i32 6\l  store i8** %11, i8*** %.reg2mem16, align 8\l  %.reload20 = load i8**, i8*** %.reg2mem16, align 8\l  store i8* blockaddress(@inner_loop, %\"6\"), i8** %.reload20, align 8\l  %12 = getelementptr i8*, i8** %JumpTable, i32 7\l  store i8** %12, i8*** %.reg2mem21, align 8\l  %.reload24 = load i8**, i8*** %.reg2mem21, align 8\l  store i8* blockaddress(@inner_loop, %\"7\"), i8** %.reload24, align 8\l  %13 = icmp eq float* %1, null\l  %14 = icmp eq float* %2, null\l  %15 = select i1 %13, i1 true, i1 %14\l  %16 = icmp eq i8* %3, null\l  %17 = select i1 %15, i1 true, i1 %16\l  store i1 %17, i1* %.reg2mem25, align 1\l  %18 = icmp eq float* %4, null\l  store i1 %18, i1* %.reg2mem27, align 1\l  %.reload = load i8**, i8*** %.reg2mem, align 8\l  %19 = load i8*, i8** %.reload, align 8\l  indirectbr i8* %19, [label %BogusBasciBlock, label %EntryBasicBlockSplit,\l... label %\"2\", label %\"3\", label %\"4\", label %\"5\", label %\"6\", label %\"7\"]\l}"];
	Node0x6000035e3740 -> Node0x6000035e3780;
	Node0x6000035e3740 -> Node0x6000035e37c0;
	Node0x6000035e3740 -> Node0x6000035e3800;
	Node0x6000035e3740 -> Node0x6000035e36c0;
	Node0x6000035e3740 -> Node0x6000035e3840;
	Node0x6000035e3740 -> Node0x6000035e3880;
	Node0x6000035e3740 -> Node0x6000035e38c0;
	Node0x6000035e3740 -> Node0x6000035e3900;
	Node0x6000035e3780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{BogusBasciBlock:                                  \l  %20 = getelementptr i8*, i8** %JumpTable, i32 0\l  store i8* blockaddress(@inner_loop, %EntryBasicBlockSplit), i8** %20, align 8\l  %21 = getelementptr i8*, i8** %JumpTable, i32 2\l  store i8* blockaddress(@inner_loop, %\"3\"), i8** %21, align 8\l  %22 = getelementptr i8*, i8** %JumpTable, i32 4\l  store i8* blockaddress(@inner_loop, %\"4\"), i8** %22, align 8\l  %23 = getelementptr i8*, i8** %JumpTable, i32 6\l  store i8* blockaddress(@inner_loop, %\"6\"), i8** %23, align 8\l  %.reload1 = load i8**, i8*** %.reg2mem, align 8\l  %24 = load i8*, i8** %.reload1, align 8\l  indirectbr i8* %24, [label %BogusBasciBlock, label %EntryBasicBlockSplit,\l... label %\"2\", label %\"3\", label %\"4\", label %\"5\", label %\"6\", label %\"7\"]\l}"];
	Node0x6000035e3780 -> Node0x6000035e3780;
	Node0x6000035e3780 -> Node0x6000035e37c0;
	Node0x6000035e3780 -> Node0x6000035e3800;
	Node0x6000035e3780 -> Node0x6000035e36c0;
	Node0x6000035e3780 -> Node0x6000035e3840;
	Node0x6000035e3780 -> Node0x6000035e3880;
	Node0x6000035e3780 -> Node0x6000035e38c0;
	Node0x6000035e3780 -> Node0x6000035e3900;
	Node0x6000035e37c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{EntryBasicBlockSplit:                             \l  %.reload26 = load i1, i1* %.reg2mem25, align 1\l  %.reload28 = load i1, i1* %.reg2mem27, align 1\l  %25 = select i1 %.reload26, i1 true, i1 %.reload28\l  %.reload4 = load i8**, i8*** %.reg2mem3, align 8\l  %.reload23 = load i8**, i8*** %.reg2mem21, align 8\l  %26 = select i1 %25, i8** %.reload23, i8** %.reload4\l  %27 = load i8*, i8** %26, align 8\l  store i32 2, i32* %.reg2mem66, align 4\l  indirectbr i8* %27, [label %BogusBasciBlock, label %EntryBasicBlockSplit,\l... label %\"2\", label %\"3\", label %\"4\", label %\"5\", label %\"6\", label %\"7\"]\l}"];
	Node0x6000035e37c0 -> Node0x6000035e3780;
	Node0x6000035e37c0 -> Node0x6000035e37c0;
	Node0x6000035e37c0 -> Node0x6000035e3800;
	Node0x6000035e37c0 -> Node0x6000035e36c0;
	Node0x6000035e37c0 -> Node0x6000035e3840;
	Node0x6000035e37c0 -> Node0x6000035e3880;
	Node0x6000035e37c0 -> Node0x6000035e38c0;
	Node0x6000035e37c0 -> Node0x6000035e3900;
	Node0x6000035e3800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"2\":                                              \l  %28 = fpext float %0 to double\l  %29 = call double @llvm.cos.f64(double %28)\l  %30 = fptrunc double %29 to float\l  store float %30, float* %.reg2mem29, align 4\l  %31 = call double @llvm.sin.f64(double %28)\l  %32 = fptrunc double %31 to float\l  store float %32, float* %.reg2mem33, align 4\l  %.reload32 = load float, float* %.reg2mem29, align 4\l  %33 = fadd float %.reload32, 2.000000e+00\l  store float %33, float* %.reg2mem36, align 4\l  %.reload8 = load i8**, i8*** %.reg2mem6, align 8\l  %34 = load i8*, i8** %.reload8, align 8\l  store double 0.000000e+00, double* %.reg2mem64, align 8\l  indirectbr i8* %34, [label %BogusBasciBlock, label %EntryBasicBlockSplit,\l... label %\"2\", label %\"3\", label %\"4\", label %\"5\", label %\"6\", label %\"7\"]\l}"];
	Node0x6000035e3800 -> Node0x6000035e3780;
	Node0x6000035e3800 -> Node0x6000035e37c0;
	Node0x6000035e3800 -> Node0x6000035e3800;
	Node0x6000035e3800 -> Node0x6000035e36c0;
	Node0x6000035e3800 -> Node0x6000035e3840;
	Node0x6000035e3800 -> Node0x6000035e3880;
	Node0x6000035e3800 -> Node0x6000035e38c0;
	Node0x6000035e3800 -> Node0x6000035e3900;
	Node0x6000035e36c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"3\":                                              \l  %.reload65 = load double, double* %.reg2mem64, align 8\l  store double %.reload65, double* %.reg2mem39, align 8\l  %.reload42 = load double, double* %.reg2mem39, align 8\l  %35 = call double @llvm.sin.f64(double %.reload42)\l  %36 = fptrunc double %35 to float\l  %37 = load float, float* %1, align 4, !tbaa !10\l  %38 = fpext float %37 to double\l  %39 = call double @llvm.sin.f64(double %38)\l  %40 = fptrunc double %39 to float\l  %41 = call double @llvm.cos.f64(double %38)\l  %42 = fptrunc double %41 to float\l  %.reload38 = load float, float* %.reg2mem36, align 4\l  %43 = fmul float %.reload38, %36\l  %44 = fmul float %43, %40\l  %.reload35 = load float, float* %.reg2mem33, align 4\l  %45 = fmul float %.reload35, %42\l  %46 = fadd float %44, %45\l  %47 = fadd float %46, 5.000000e+00\l  %48 = fdiv float 1.000000e+00, %47\l  store float %48, float* %.reg2mem43, align 4\l  %.reload41 = load double, double* %.reg2mem39, align 8\l  %49 = call double @llvm.cos.f64(double %.reload41)\l  %50 = fptrunc double %49 to float\l  %51 = load float, float* %2, align 4, !tbaa !10\l  %52 = fpext float %51 to double\l  %53 = call double @llvm.cos.f64(double %52)\l  %54 = fptrunc double %53 to float\l  %55 = call double @llvm.sin.f64(double %52)\l  %56 = fptrunc double %55 to float\l  %57 = fmul float %43, %42\l  %.reload34 = load float, float* %.reg2mem33, align 4\l  %58 = fmul float %.reload34, %40\l  %59 = fsub float %57, %58\l  %.reload47 = load float, float* %.reg2mem43, align 4\l  %60 = fmul float %.reload47, 3.000000e+01\l  %.reload37 = load float, float* %.reg2mem36, align 4\l  %61 = fmul float %.reload37, %50\l  %62 = fmul float %61, %54\l  %63 = fmul float %59, %56\l  %64 = fsub float %62, %63\l  %65 = fmul float %64, %60\l  %66 = fadd float %65, 4.000000e+01\l  %67 = fptosi float %66 to i32\l  store i32 %67, i32* %.reg2mem48, align 4\l  %.reload46 = load float, float* %.reg2mem43, align 4\l  %68 = fmul float %.reload46, 1.500000e+01\l  %69 = fmul float %61, %56\l  %70 = fmul float %59, %54\l  %71 = fadd float %69, %70\l  %72 = fmul float %71, %68\l  %73 = fadd float %72, 1.200000e+01\l  %74 = fptosi float %73 to i32\l  store i32 %74, i32* %.reg2mem52, align 4\l  %.reload31 = load float, float* %.reg2mem29, align 4\l  %75 = fmul float %.reload31, %36\l  %76 = fmul float %75, %42\l  %77 = fsub float %58, %76\l  %78 = fmul float %77, %54\l  %79 = fmul float %75, %40\l  %80 = fsub float %78, %79\l  %81 = fsub float %80, %45\l  %.reload30 = load float, float* %.reg2mem29, align 4\l  %82 = fmul float %.reload30, %50\l  %83 = fmul float %82, %56\l  %84 = fsub float %81, %83\l  %85 = fmul float %84, 8.000000e+00\l  %86 = fptosi float %85 to i32\l  store i32 %86, i32* %.reg2mem55, align 4\l  %.reload54 = load i32, i32* %.reg2mem52, align 4\l  %87 = add i32 %.reload54, -1\l  %88 = icmp ult i32 %87, 21\l  %.reload51 = load i32, i32* %.reg2mem48, align 4\l  %89 = icmp sgt i32 %.reload51, 0\l  %90 = select i1 %88, i1 %89, i1 false\l  %.reload50 = load i32, i32* %.reg2mem48, align 4\l  %91 = icmp slt i32 %.reload50, 80\l  %92 = select i1 %90, i1 %91, i1 false\l  %.reload11 = load i8**, i8*** %.reg2mem10, align 8\l  %.reload19 = load i8**, i8*** %.reg2mem16, align 8\l  %93 = select i1 %92, i8** %.reload11, i8** %.reload19\l  %94 = load i8*, i8** %93, align 8\l  indirectbr i8* %94, [label %BogusBasciBlock, label %EntryBasicBlockSplit,\l... label %\"2\", label %\"3\", label %\"4\", label %\"5\", label %\"6\", label %\"7\"]\l}"];
	Node0x6000035e36c0 -> Node0x6000035e3780;
	Node0x6000035e36c0 -> Node0x6000035e37c0;
	Node0x6000035e36c0 -> Node0x6000035e3800;
	Node0x6000035e36c0 -> Node0x6000035e36c0;
	Node0x6000035e36c0 -> Node0x6000035e3840;
	Node0x6000035e36c0 -> Node0x6000035e3880;
	Node0x6000035e36c0 -> Node0x6000035e38c0;
	Node0x6000035e36c0 -> Node0x6000035e3900;
	Node0x6000035e3840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"4\":                                              \l  %.reload53 = load i32, i32* %.reg2mem52, align 4\l  %95 = mul nsw i32 %.reload53, 80\l  %.reload49 = load i32, i32* %.reg2mem48, align 4\l  %96 = add nsw i32 %95, %.reload49\l  %97 = sext i32 %96 to i64\l  store i64 %97, i64* %.reg2mem58, align 8\l  %.reload60 = load i64, i64* %.reg2mem58, align 8\l  %98 = getelementptr inbounds float, float* %4, i64 %.reload60\l  store float* %98, float** %.reg2mem61, align 8\l  %.reload63 = load float*, float** %.reg2mem61, align 8\l  %99 = load float, float* %.reload63, align 4, !tbaa !10\l  %.reload45 = load float, float* %.reg2mem43, align 4\l  %100 = fcmp ogt float %.reload45, %99\l  %.reload14 = load i8**, i8*** %.reg2mem13, align 8\l  %.reload18 = load i8**, i8*** %.reg2mem16, align 8\l  %101 = select i1 %100, i8** %.reload14, i8** %.reload18\l  %102 = load i8*, i8** %101, align 8\l  indirectbr i8* %102, [label %BogusBasciBlock, label %EntryBasicBlockSplit,\l... label %\"2\", label %\"3\", label %\"4\", label %\"5\", label %\"6\", label %\"7\"]\l}"];
	Node0x6000035e3840 -> Node0x6000035e3780;
	Node0x6000035e3840 -> Node0x6000035e37c0;
	Node0x6000035e3840 -> Node0x6000035e3800;
	Node0x6000035e3840 -> Node0x6000035e36c0;
	Node0x6000035e3840 -> Node0x6000035e3840;
	Node0x6000035e3840 -> Node0x6000035e3880;
	Node0x6000035e3840 -> Node0x6000035e38c0;
	Node0x6000035e3840 -> Node0x6000035e3900;
	Node0x6000035e3880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"5\":                                              \l  %.reload44 = load float, float* %.reg2mem43, align 4\l  %.reload62 = load float*, float** %.reg2mem61, align 8\l  store float %.reload44, float* %.reload62, align 4, !tbaa !10\l  %103 = load i8*, i8** @CHARS, align 8, !tbaa !14\l  %.reload57 = load i32, i32* %.reg2mem55, align 4\l  %104 = icmp sgt i32 %.reload57, 0\l  %.reload56 = load i32, i32* %.reg2mem55, align 4\l  %105 = select i1 %104, i32 %.reload56, i32 0\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds i8, i8* %103, i64 %106\l  %108 = load i8, i8* %107, align 1, !tbaa !16\l  %.reload59 = load i64, i64* %.reg2mem58, align 8\l  %109 = getelementptr inbounds i8, i8* %3, i64 %.reload59\l  store i8 %108, i8* %109, align 1, !tbaa !16\l  %.reload17 = load i8**, i8*** %.reg2mem16, align 8\l  %110 = load i8*, i8** %.reload17, align 8\l  indirectbr i8* %110, [label %BogusBasciBlock, label %EntryBasicBlockSplit,\l... label %\"2\", label %\"3\", label %\"4\", label %\"5\", label %\"6\", label %\"7\"]\l}"];
	Node0x6000035e3880 -> Node0x6000035e3780;
	Node0x6000035e3880 -> Node0x6000035e37c0;
	Node0x6000035e3880 -> Node0x6000035e3800;
	Node0x6000035e3880 -> Node0x6000035e36c0;
	Node0x6000035e3880 -> Node0x6000035e3840;
	Node0x6000035e3880 -> Node0x6000035e3880;
	Node0x6000035e3880 -> Node0x6000035e38c0;
	Node0x6000035e3880 -> Node0x6000035e3900;
	Node0x6000035e38c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{\"6\":                                              \l  %.reload40 = load double, double* %.reg2mem39, align 8\l  %111 = fadd double %.reload40, 2.000000e-02\l  %112 = fptrunc double %111 to float\l  %113 = fpext float %112 to double\l  %114 = fcmp olt double %113, 6.280000e+00\l  %.reload7 = load i8**, i8*** %.reg2mem6, align 8\l  %.reload22 = load i8**, i8*** %.reg2mem21, align 8\l  %115 = select i1 %114, i8** %.reload7, i8** %.reload22\l  %116 = load i8*, i8** %115, align 8\l  store double %113, double* %.reg2mem64, align 8\l  store i32 0, i32* %.reg2mem66, align 4\l  indirectbr i8* %116, [label %BogusBasciBlock, label %EntryBasicBlockSplit,\l... label %\"2\", label %\"3\", label %\"4\", label %\"5\", label %\"6\", label %\"7\"]\l}"];
	Node0x6000035e38c0 -> Node0x6000035e3780;
	Node0x6000035e38c0 -> Node0x6000035e37c0;
	Node0x6000035e38c0 -> Node0x6000035e3800;
	Node0x6000035e38c0 -> Node0x6000035e36c0;
	Node0x6000035e38c0 -> Node0x6000035e3840;
	Node0x6000035e38c0 -> Node0x6000035e3880;
	Node0x6000035e38c0 -> Node0x6000035e38c0;
	Node0x6000035e38c0 -> Node0x6000035e3900;
	Node0x6000035e3900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{\"7\":                                              \l  %.reload67 = load i32, i32* %.reg2mem66, align 4\l  ret i32 %.reload67\l}"];
}
